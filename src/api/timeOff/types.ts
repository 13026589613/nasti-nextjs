export interface ShiftTimeOffBaseVO {
  id: string;
  scheduleId: string;
  communityId: string;
  communityName?: any;
  departmentId: string;
  departmentName: string;
  locationRefVOs: any[];
  workerRoleId: string;
  workerRoleName: string;
  workerRoleColor?: any;
  userId: string;
  userName?: any;
  userEmail?: any;
  userPhone?: any;
  dayOfWeek: number;
  startTimeUTC: string;
  endTimeUTC: string;
  startTimeLocal: string;
  endTimeLocal: string;
  shiftStartTime: string;
  shiftEndTime: string;
  shiftDate: string;
  durationMins: number;
  paidMins?: any;
  status?: any;
  note: string;
  breakRequiredMins?: any;
  checkinTime?: any;
  checkoutTime?: any;
  checkinTimeLocal?: any;
  checkoutTimeLocal?: any;
  checkinLat?: any;
  checkinLng?: any;
  checkoutLat?: any;
  checkoutLng?: any;
  parentId?: any;
  isPartialShift: boolean;
  isPublished: boolean;
  isMultiDay: boolean;
  tags: any[];
  tagsList?: any;
  zoneId: string;
  attendeeStatus?: any;
  breakException: boolean;
  schedulePublished: boolean;
  timeId?: any;
  timeStartTimeLocal?: any;
  timeEndTimeLocal?: any;
  timeStartTime?: any;
  timeEndTime?: any;
  timeShiftDate?: any;
}

export type UserTimeOffRequestHandleShiftRes = {
  id: string;
  userId: string;
  communityId: string;
  userName: string;
  zoneId: string;
  zoneShortName: string;
  startTimeUtc: string;
  endTimeUtc: string;
  shiftTimeOffBaseVOS: ShiftTimeOffBaseVO[];
};

export type UserTimeOffShiftEditReq = {
  id: string;
  communityId: string;
  confirmPublish: boolean;
  departmentId: string;
  locationIds: string[];
  note: string;
  published: boolean;
  shiftDate: string;
  shiftEndTime: string;
  shiftStartTime: string;
  tags: string[];
  userId: string | null;
  workerRoleId: string;
};
